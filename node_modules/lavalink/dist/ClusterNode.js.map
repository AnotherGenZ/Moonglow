{"version":3,"sources":["ClusterNode.ts"],"names":[],"mappings":";;AACA,sCAAwD;AA4BxD,MAAqB,WAAY,SAAQ,cAAQ;IAI/C,YAA4B,OAAgB,EAAE,OAA2B;QACvE,KAAK,CAAC,OAAO,CAAC,CAAC;QADW,YAAO,GAAP,OAAO,CAAS;QAE1C,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;IAChD,CAAC;IAEM,IAAI,CAAC,IAAqB,EAAE,GAAG,IAAW;QAC/C,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;YAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;IAC1C,CAAC;IAEM,IAAI,CAAC,OAAe,EAAE,EAAU;QACrC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IACxC,CAAC;CACF;AAlBD,8BAkBC","file":"ClusterNode.js","sourcesContent":["import Cluster from './base/Cluster';\nimport BaseNode, { BaseNodeOptions } from './base/Node';\n\nexport interface ClusterNodeOptions extends BaseNodeOptions {\n  tags?: Iterable<string>;\n}\n\nexport interface Stats {\n  players: number;\n  playingPlayers: number;\n  uptime: number;\n  memory?: {\n    free: number;\n    used: number;\n    allocated: number;\n    reservable: number;\n  };\n  cpu?: {\n    cores: number;\n    systemLoad: number;\n    lavalinkLoad: number;\n  };\n  frameStats?: {\n    sent: number;\n    nulled: number;\n    deficit: number;\n  };\n}\n\nexport default class ClusterNode extends BaseNode {\n  public tags: Set<string>;\n  public stats?: Stats;\n\n  constructor(public readonly cluster: Cluster, options: ClusterNodeOptions) {\n    super(options);\n    this.tags = new Set(options.tags || []);\n    this.on('stats', stats => this.stats = stats);\n  }\n\n  public emit(name: string | symbol, ...args: any[]): boolean {\n    if (this.listenerCount(name)) super.emit(name, ...args);\n    return this.cluster.emit(name, ...args);\n  }\n\n  public send(guildID: string, pk: object): Promise<any> {\n    return this.cluster.send(guildID, pk);\n  }\n}\n"],"sourceRoot":"../src"}